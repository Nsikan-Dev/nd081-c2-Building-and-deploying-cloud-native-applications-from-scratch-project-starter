az webapp up --sku F1 -n az-dev-nu-course2-app --resource-group az-dev-nu-course2-rg --location centralus

az acr create --name $REGISTRY_NAME --resource-group az-dev-nu-course2-rg --sku Basic
az acr login --name reg_name
az acr show --name $REGISTRY_NAME --query loginServer --output table

func init --docker-only
docker images

docker tag image_name azdevnuregistry.azurecr.io/image_name:v1
docker build --tag azdevnuregistry.azurecr.io/azdevnuproject:v1 .
docker push --tag azdevnuregistry.azurecr.io/azdevnuproject:v1
az acr repository list --name azdevnuregistry.azurecr.io --output table


//az aks create -n myAKSCluster -g myResourceGroup --generate-ssh-keys --attach-acr $MYACR
az aks create --name az-dev-nu-course2-aks-cluster --resource-group az-dev-nu-course2-rg --node-count 2 --generate-ssh-keys --attach-acr azdevnuregistry

az aks get-credentials --name az-dev-nu-course2-aks-cluster --resource-group az-dev-nu-course2-rg

kubectl get nodes

func kubernetes install --namespace keda 

func kubernetes deploy --name  az-dev-nu-course2-aks-cluster --image-name  azdevnuregistry.azurecr.io/azdevnuproject:v1  --dry-run > deploy.yml

func kubernetes deploy --name  az-dev-nu-course2-aks-cluster --image-name  azdevnuregistry.azurecr.io/azdevnuproject:v1 —polling-interval 3 —cooldown-period 5

kubectl apply -f deploy.yml


ASSIGNEE=$(az aks show -g az-dev-nu-course2-rg -n az-dev-nu-course2-aks-cluster --query identityProfile.kubeletidentity.clientId -o tsv)
az role assignment list --assignee $ASSIGNEE --all -o table
